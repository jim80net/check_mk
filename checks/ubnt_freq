#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mehdi Abaakouk 2012             sileht@sileht.net      |
# +------------------------------------------------------------------+
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_ubnt_freq(info):
    if info:
        return [ (None, {"freq": saveint(info[0][0])} ) ]
    else:
        return []

def check_ubnt_freq(item, params, info):
    freq = saveint(info[0][0])
    perfdata = [ 
        ("freq", freq, None, None, 0),
    ]
    infotext = " - frequency: %d MHz, initial frequency: %d MHz" % (freq, params["freq"])
    if freq <= 0:
        return (2, "CRIT" + infotext, perfdata)
    elif freq != params["freq"]:
        return (1, "WARN" + infotext, perfdata)
    else:
        return (0, "OK" + infotext, perfdata)
    return (3, "UNKNOWN - Frequency not found")

check_info['ubnt_freq'] = ( check_ubnt_freq, "Frequency", 1, inventory_ubnt_freq )
snmp_info['ubnt_freq'] = ( ".1.3.6.1.4.1.14988.1.1.1.1.1", [7])

snmp_scan_functions['ubnt_freq'] = \
   lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith('.1.3.6.1.4.1.10002')

